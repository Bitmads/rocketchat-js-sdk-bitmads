{"version":3,"file":"log.js","sourceRoot":"","sources":["../../src/lib/log.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAIH,uDAAuD;AACvD,MAAM,WAAW;IACf,KAAK,CAAE,GAAG,IAAW;QACnB,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAA;IACtB,CAAC;IACD,IAAI,CAAE,GAAG,IAAW;QAClB,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAA;IACtB,CAAC;IACD,OAAO,CAAE,GAAG,IAAW;QACrB,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAA;IACvB,CAAC;IACD,IAAI,CAAE,GAAG,IAAW;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAA;IAC9B,CAAC;IACD,KAAK,CAAE,GAAG,IAAW;QACnB,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAA;IACxB,CAAC;CACF;AAED,oCAAoC;AACpC,MAAM,CAAC,IAAI,MAAM,GAAY,IAAI,WAAW,EAAE,CAAA;AAE9C,iCAAiC;AACjC,MAAM,UAAU,UAAU,CAAE,WAAoB;IAC9C,MAAM,GAAG,WAAW,CAAA;AACtB,CAAC;AAED,2BAA2B;AAC3B,MAAM,UAAU,OAAO;IACrB,UAAU,CAAC;QACT,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI;QACjB,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI;QAChB,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI;QAChB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI;QACnB,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI;KAClB,CAAC,CAAA;AACJ,CAAC","sourcesContent":["/**\n * @module log\n * Basic log handling with ability to override when used within another module.\n */\n\nimport { ILogger } from '../interfaces'\n\n/** Temp logging, should override form adapter's log */\nclass InternalLog implements ILogger {\n  debug (...args: any[]) {\n    console.log(...args)\n  }\n  info (...args: any[]) {\n    console.log(...args)\n  }\n  warning (...args: any[]) {\n    console.warn(...args)\n  }\n  warn (...args: any[]) { // legacy method\n    return this.warning(...args)\n  }\n  error (...args: any[]) {\n    console.error(...args)\n  }\n}\n\n/** Default basic console logging */\nexport let logger: ILogger = new InternalLog()\n\n/** Substitute logging handler */\nexport function replaceLog (externalLog: ILogger) {\n  logger = externalLog\n}\n\n/** Null all log outputs */\nexport function silence () {\n  replaceLog({\n    debug: () => null,\n    info: () => null,\n    warn: () => null,\n    warning: () => null,\n    error: () => null\n  })\n}\n"]}