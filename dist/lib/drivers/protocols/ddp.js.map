{"version":3,"file":"ddp.js","sourceRoot":"","sources":["../../../../src/lib/drivers/protocols/ddp.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module DDP\n * Handles low-level websocket connection and event subscriptions\n */\n\nimport WebSocket from 'universal-websocket-client'\nimport { EventEmitter } from 'tiny-events'\nimport { logger as Logger } from '../../log'\nimport {\n  ISocketOptions,\n  ISocketMessageHandler,\n  ISubscription,\n  ICredentials,\n  ILoginResult,\n  ICredentialsPass,\n  isLoginPass,\n  ICredentialsOAuth,\n  isLoginOAuth,\n  ICredentialsAuthenticated,\n  isLoginAuthenticated,\n  isLoginResult,\n  ISocketMessageCallback,\n\tICallback,\n\tILogger\n} from '../../../interfaces'\nimport * as settings from '../../settings'\n\nimport { hostToWS } from '../../util'\nimport { IDriver } from '../driver'\n// import createHash from 'create-hash'\n\n/** Websocket handler class, manages connections and subscriptions */\nexport class Socket extends EventEmitter {\n  sent = 0\n  host: string\n  lastPing = Date.now()\n  subscriptions: { [id: string]: ISubscription } = {}\n  handlers: ISocketMessageHandler[] = []\n  config: ISocketOptions | any\n  openTimeout?: NodeJS.Timer | number\n  reopenInterval?: NodeJS.Timer\n  pingTimeout?: NodeJS.Timer | number\n  connection?: WebSocket\n  session?: string\n\n  /** Create a websocket handler */\n  constructor (\n    options?: ISocketOptions | any,\n    public resume: ILoginResult | null = null\n  ) {\n    super()\n    this.config = {\n      host: options.host || 'localhost:3000',\n      useSsl: options.useSsl || false,\n      reopen: options.reopen || console.log,\n      ping: options.timeout || 20000\n    }\n\n    this.host = `${hostToWS(this.config.host, this.config.useSsl)}/websocket`\n\n    // Echo call results, emitting ID of DDP call for more specific listeners\n    this.on('message.result', (data: any) => {\n      const { id, result, error } = data\n      this.emit(id, { id, result, error })\n    })\n  }\n\n  /**\n   * Open websocket connection, with optional retry interval.\n   * Stores connection, setting up handlers for open/close/message events.\n   * Resumes login if given token.\n   */\n  open (ms: number = this.config.reopen) {\n    return new Promise(async (resolve, reject) => {\n      let connection: WebSocket\n      this.lastPing = Date.now()\n      await this.close()\n      if (this.reopenInterval) clearInterval(this.reopenInterval)\n      this.reopenInterval = setInterval(() => {\n        return !this.alive() && this.reopen()\n      }, ms)\n      try {\n        connection = new WebSocket(this.host)\n        connection.onerror = reject\n      } catch (err) {\n        return reject(err)\n      }\n      this.connection = connection\n      this.connection.onmessage = this.onMessage.bind(this)\n      this.connection.onclose = this.onClose.bind(this)\n      this.connection.onopen = this.onOpen.bind(this, resolve)\n    })\n  }\n\n  /** Send handshake message to confirm connection, start pinging. */\n  async onOpen (callback: Function) {\n    const connected = await this.send({\n      msg: 'connect',\n      version: '1',\n      support: ['1', 'pre2', 'pre1']\n    }, 'connected')\n    this.session = connected.session\n    this.ping().catch((err) => Logger.error(`[ddp] Unable to ping server: ${err.message}`))\n    this.emit('open')\n    if (this.resume) await this.login(this.resume)\n    return callback(this.connection)\n  }\n\n  /** Emit close event so it can be used for promise resolve in close() */\n  onClose (e: any) {\n    Logger.info(`[ddp] Close (${e.code}) ${e.reason}`)\n    this.emit('close', e)\n    if (e.code !== 1000) return this.reopen()\n  }\n\n  /**\n   * Find and call matching handlers for incoming message data.\n   * Handlers match on collection, id and/or msg attribute in that order.\n   * Any matched handlers are removed once called.\n   * All collection events are emitted with their `msg` as the event name.\n   */\n  onMessage (e: any) {\n    const data = (e.data) ? JSON.parse(e.data) : undefined\n    // console.log(data) // 👈  very useful for debugging missing responses\n    if (!data) return Logger.error(`[ddp] JSON parse error: ${e.message}`)\n    if (data.collection) this.emit(data.collection, data)\n    const handlers = []\n    const matcher = (handler: ISocketMessageHandler) => {\n      return ((\n        (data.collection && handler.collection === data.collection)\n      ) || (\n        (data.msg && handler.msg === data.msg) &&\n        (!handler.id || !data.id || handler.id === data.id)\n      ))\n    }\n    // tslint:disable-next-line\n    for (let i = 0; i < this.handlers.length; i++) {\n      if (matcher(this.handlers[i])) {\n        handlers.push(this.handlers[i])\n        if (!this.handlers[i].persist) {\n          this.handlers.splice(i, 1)\n          i--\n        }\n      }\n    }\n    for (let handler of handlers) handler.callback(data)\n  }\n\n  /** Disconnect the DDP from server and clear all subscriptions. */\n  async close () {\n    if (this.connected) {\n      await this.unsubscribeAll()\n      await new Promise((resolve) => {\n        this.connection!.close(1000, 'disconnect')\n        this.once('close', () => {\n          delete this.connection\n          resolve()\n        })\n      })\n        .catch(() => this.close())\n    }\n  }\n\n  /** Clear connection and try to connect again. */\n  async reopen () {\n    if (this.openTimeout) return\n    await this.close()\n    this.openTimeout = setTimeout(async () => {\n      delete this.openTimeout\n      await this.open()\n        .catch((err) => Logger.error(`[ddp] Reopen error: ${err.message}`))\n    }, this.config.reopen)\n  }\n\n  /** Check if websocket connected and ready. */\n  get connected () {\n    return (\n      this.connection &&\n      this.connection.readyState === 1 &&\n      this.alive()\n    )\n  }\n\n  /** Check if connected and logged in */\n  get loggedIn () {\n    return (this.connected && !!this.resume)\n  }\n\n  /**\n   * Send an object to the server via Socket. Adds handler to collection to\n   * allow awaiting response matching an expected object. Most responses are\n   * identified by their message event name and the ID they were sent with, but\n   * some responses don't return the ID fallback to just matching on event name.\n   * Data often includes an error attribute if something went wrong, but certain\n   * types of calls send back a different `msg` value instead, e.g. `nosub`.\n   * @param obj       Object to be sent\n   * @param msg       The `data.msg` value to wait for in response\n   * @param errorMsg  An alternate `data.msg` value indicating an error response\n   */\n  async send (\n      obj: any,\n      msg: boolean | string = 'result',\n      errorMsg?: string\n    ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.sent += 1\n      const id = obj.id || `ddp-${ this.sent }`\n      if (!this.connection) throw new Error('[ddp] sending without open connection')\n      this.connection.send(JSON.stringify({ ...obj, id }))\n      if (typeof msg === 'string') {\n        this.handlers.push({ id, msg, callback: (data) => (data.error)\n          ? reject(data.error)\n          : resolve(data)\n        })\n      }\n      if (errorMsg) {\n        this.handlers.push({ id, msg: errorMsg, callback: reject })\n      }\n      this.once('close', reject)\n    })\n  }\n\n  /** Send ping, record time, re-open if nothing comes back, repeat */\n  async ping () {\n    this.pingTimeout = setTimeout(() => {\n      this.send({ msg: 'ping' }, 'pong')\n        .then(() => {\n          this.lastPing = Date.now()\n          return this.ping()\n        })\n        .catch(() => this.reopen())\n    }, this.config.ping)\n  }\n\n  /** Check if ping-pong to server is within tolerance of 1 missed ping */\n  alive () {\n    if (!this.lastPing) return false\n    return (Date.now() - this.lastPing <= this.config.ping * 2)\n  }\n\n  /**\n   * Calls a method on the server and returns a promise resolved\n   * with the result of the method.\n   * @param method    The name of the method to be called\n   * @param params    An array with the parameters to be sent\n   */\n  async call (method: string, ...params: any[]) {\n    const response = await this.send({ msg: 'method', method, params })\n      .catch((err) => {\n        Logger.error(`[ddp] Call error: ${err.message}`)\n        throw err\n      })\n    return (response.result) ? response.result : response\n  }\n\n  /**\n   * Login to server and resubscribe to all subs, resolve with user information.\n   * @param credentials User credentials (username/password, oauth or token)\n   */\n  async login (credentials: any) {\n    const params = this.loginParams(credentials)\n    this.resume = (await this.call('login', params) as ILoginResult)\n    await this.subscribeAll()\n    this.emit('login', this.resume)\n    return this.resume\n  }\n\n  /** Take variety of login credentials object types for accepted params */\n  loginParams (\n    credentials:\n      ICredentialsPass |\n      ICredentialsOAuth |\n      ICredentialsAuthenticated |\n      ILoginResult |\n      ICredentials\n  ) {\n    if (\n      isLoginPass(credentials) ||\n      isLoginOAuth(credentials) ||\n      isLoginAuthenticated(credentials)\n    ) {\n      return credentials\n    }\n    if (isLoginResult(credentials)) {\n      const params: ICredentialsAuthenticated = {\n        resume: credentials.token\n      }\n      return params\n    }\n    const params: ICredentialsPass = {\n      user: { username: credentials.username },\n      password: {\n        digest: 'asd',\n        // digest: createHash('sha256').update(credentials.password).digest('hex'),\n        algorithm: 'sha-256'\n      }\n    }\n    return params\n  }\n\n  /** Logout the current User from the server via Socket. */\n  logout () {\n    this.resume = null\n    return this.unsubscribeAll()\n      .then(() => this.call('logout'))\n  }\n\n  /** Register a callback to trigger on message events in subscription */\n  onEvent (id: string, collection: string, callback: ISocketMessageCallback) {\n    this.handlers.push({ id, collection, persist: true, callback })\n  }\n\n  /**\n   * Subscribe to a stream on server via socket and returns a promise resolved\n   * with the subscription object when the subscription is ready.\n   * @param name      Stream name to subscribe to\n   * @param params    Params sent to the subscription request\n   */\n  subscribe (name: string, params: any[], callback?: ISocketMessageCallback) {\n    Logger.info(`[ddp] Subscribe to ${name}, param: ${JSON.stringify(params)}`)\n    return this.send({ msg: 'sub', name, params }, 'ready')\n      .then((result) => {\n        const id = (result.subs) ? result.subs[0] : undefined\n        const unsubscribe = this.unsubscribe.bind(this, id)\n        const onEvent = this.onEvent.bind(this, id, name)\n        const subscription = { id, name, params, unsubscribe, onEvent }\n        if (callback) subscription.onEvent(callback)\n        this.subscriptions[id] = subscription\n        return subscription\n      })\n      .catch((err) => {\n        Logger.error(`[ddp] Subscribe error: ${err.message}`)\n        throw err\n      })\n  }\n\n  /** Subscribe to all pre-configured streams (e.g. on login resume) */\n  subscribeAll () {\n    const subscriptions = Object.keys(this.subscriptions || {}).map((key) => {\n      const { name, params } = this.subscriptions[key]\n      return this.subscribe(name, params)\n    })\n    return Promise.all(subscriptions)\n  }\n\n  /** Unsubscribe to server stream, resolve with unsubscribe request result */\n  unsubscribe (id: any) {\n    if (!this.subscriptions[id]) return Promise.reject(id)\n    delete this.subscriptions[id]\n    return this.send({ msg: 'unsub', id }, 'result', 'nosub')\n      .then((data: any) => data.result || data.subs)\n      .catch((err) => {\n        if (!err.msg && err.msg !== 'nosub') {\n          Logger.error(`[ddp] Unsubscribe error: ${err.message}`)\n          throw err\n        }\n      })\n  }\n\n  /** Unsubscribe from all active subscriptions and reset collection */\n  unsubscribeAll () {\n    const unsubAll = Object.keys(this.subscriptions).map((id) => {\n      return this.subscriptions[id].unsubscribe()\n    })\n    return Promise.all(unsubAll)\n      .then(() => this.subscriptions = {})\n  }\n}\n\nexport class DDPDriver extends EventEmitter implements IDriver {\n  logger: ILogger\n  config: ISocketOptions\n\t/**\n\t * Event Emitter for listening to connection (echoes selection of DDP events)\n\t * @example\n\t *  import { driver } from '@rocket.chat/sdk'\n\t *  driver.connect()\n\t *  driver.events.on('connected', () => console.log('driver connected'))\n\t */\n\t// events = new EventEmitter()\n\n\t/**\n\t * An Websocket instance for interacting with Rocket.Chat.\n\t * Variable not initialised until `connect` called.\n\t */\n  ddp: Socket\n\n\t/**\n\t * Websocket subscriptions, exported for direct polling by adapters\n\t * Variable not initialised until `prepMeteorSubscriptions` called.\n\t * @deprecated Use `ddp.Socket` instance subscriptions instead.\n\t */\n  subscriptions: { [id: string]: ISubscription } = {}\n\n\t/** Save messages subscription to ensure only one created */\n  messages: ISubscription | undefined\n\n\t/** Current user object populated from resolved login */\n  userId: string = ''\n\n\t/** Array of joined room IDs (for reactive queries) */\n  joinedIds: string[] = []\n\n  constructor ({ host, integrationId, config, logger = Logger, ...moreConfigs }: any) {\n    super()\n\n    this.config = {\n      ...config,\n      ...moreConfigs,\n      host: host.replace(/(^\\w+:|^)\\/\\//, ''),\n      timeout: 20000\n\t\t\t// reopen: number\n\t\t\t// ping: number\n\t\t\t// close: number\n\t\t\t// integration: string\n    }\n    this.ddp = new Socket({ ...this.config })\n    this.logger = logger\n  }\n\t/**\n\t * Initialise socket instance with given options or defaults.\n\t * Proxies the DDP module socket connection. Resolves with socket when open.\n\t * Accepts callback following error-first-pattern.\n\t * Error returned or promise rejected on timeout.\n\t * @example <caption>Using promise</caption>\n\t *  import { driver } from '@rocket.chat/sdk'\n\t *  driver.connect()\n\t *    .then(() => console.log('connected'))\n\t *    .catch((err) => console.error(err))\n\t */\n  connect (): Promise<IDriver> {\n    const config: ISocketOptions = { ...this.config } // override defaults\n    return new Promise((resolve, reject) => {\n      this.logger.info('[driver] Connecting', config)\n      this.subscriptions = this.ddp.subscriptions\n      this.ddp.open().catch((err: Error) => {\n        this.logger.error(`[driver] Failed to connect: ${err.message}`)\n        reject(err)\n      })\n\n      this.ddp.on('open', () => this.emit('connected')) // echo ddp event\n\n      let cancelled = false\n      const rejectionTimeout = setTimeout(() => {\n        this.logger.info(`[driver] Timeout (${config.timeout})`)\n        const err = new Error('Socket connection timeout')\n        cancelled = true\n        this.removeAllListeners('connected')\n        reject(err)\n      }, config.timeout)\n\n\t\t\t// if to avoid condition where timeout happens before listener to 'connected' is added\n\t\t\t// and this listener is not removed (because it was added after the removal)\n      if (!cancelled) {\n        this.once('connected', () => {\n          this.logger.info('[driver] Connected')\n          if (cancelled) return this.ddp.close() // cancel if already rejected\n          clearTimeout(rejectionTimeout)\n          resolve(this as any)\n        })\n      }\n    })\n  }\n\n  disconnect (): Promise<any> {\n    return this.ddp.close()\n  }\n\n  subscribe (topic: string, eventname: string, ...args: any[]): Promise<ISubscription> {\n    this.logger.info(`[DDP driver] Subscribing to ${topic} | ${JSON.stringify(args)}`)\n    return this.ddp.subscribe(topic, [eventname, { 'useCollection': false, 'args': args }])\n  }\n\n  subscribeNotifyAll (): Promise<any> {\n    const topic = 'stream-notify-all'\n    return Promise.all([\n      'roles-change',\n      'updateEmojiCustom',\n      'deleteEmojiCustom',\n      'updateAvatar',\n      'public-settings-changed',\n      'permissions-changed'\n    ].map(event => this.subscribe(topic, event, false)))\n  }\n\n  subscribeLoggedNotify (): Promise<any> {\n    const topic = 'stream-notify-logged'\n    return Promise.all([\n      'Users:NameChanged',\n      'Users:Deleted',\n      'updateAvatar',\n      'updateEmojiCustom',\n      'deleteEmojiCustom',\n      'roles-change'\n    ].map(event => this.subscribe(topic, event, false)))\n  }\n\n  subscribeNotifyUser (): Promise<any> {\n    const topic = 'stream-notify-user'\n    return Promise.all([\n      'message',\n      'otr',\n      'webrtc',\n      'notification',\n      'rooms-changed',\n      'subscriptions-changed'\n    ].map(event => this.subscribe(topic, `${this.userId}/${event}`, false)))\n  }\n\n  subscribeRoom (rid: string, ...args: any[]): Promise<ISubscription[]> {\n    const topic = 'stream-notify-room'\n    return Promise.all([\n      this.subscribe('stream-room-messages', rid, ...args),\n      this.subscribe(topic, `${rid}/typing`, ...args),\n      this.subscribe(topic, `${rid}/deleteMessage`, ...args)\n    ])\n  }\n\n\t/** Login to Rocket.Chat via DDP */\n  async login (credentials: ICredentials, args: any): Promise<any> {\n    if (!this.ddp || !this.ddp.connected) {\n      await this.connect()\n    }\n    this.logger.info(`[DDP driver] Login with ${JSON.stringify(credentials)}`)\n    const login: ILoginResult = await this.ddp.login(credentials)\n    this.userId = login.id\n    return this\n  }\n\t/** Unsubscribe from Meteor stream. Proxy for socket unsubscribe. */\n  unsubscribe (subscription: ISubscription) {\n    return this.ddp.unsubscribe(subscription.id)\n  }\n\n\t/** Unsubscribe from all subscriptions. Proxy for socket unsubscribeAll */\n  unsubscribeAll (): Promise<any> {\n    return this.ddp.unsubscribeAll()\n  }\n\n  onMessage (cb: ICallback): void {\n    this.ddp.on('stream-room-messages', ({ fields: { args: [message] } }: any) => cb(message))\n  }\n\n  onTyping (cb: ICallback): void {\n    this.ddp.on('stream-notify-room', ({ fields: { args: [username, isTyping] } }: any) => {\n      cb(username, isTyping)\n    })\n  }\n}\n"]}