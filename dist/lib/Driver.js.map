{"version":3,"file":"Driver.js","sourceRoot":"","sources":["../../src/lib/Driver.ts"],"names":[],"mappings":";;;;;AAAA,sCAAsC;AACtC,uCAAsC;AACtC,mCAAqC;AACrC,4CAAmB;AACnB,MAAM,QAAQ,GAAG,sBAAW,EAAE,CAAA;AAE9B;;;GAGG;AACH,YAAoB,SAAQ,qBAAY;IAGtC;;;OAGG;IACH,wEAAwE;IACxE,YAAoB,OAAO,gBAAgB;QACzC,KAAK,EAAE,CAAA;QADW,SAAI,GAAJ,IAAI,CAAmB;QAEzC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC;YAC3B,QAAQ,EAAE,QAAQ,IAAI,YAAY;YAClC,iBAAiB,EAAE,YAAE;SACtB,CAAC,CAAA;QACF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAA;QAC3D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAA;IACjE,CAAC;CACF;AAjBD,wBAiBC","sourcesContent":["// @ts-ignore // Asteroid is not typed\nimport { createClass } from 'asteroid'\nimport { EventEmitter } from 'events'\nimport ws from 'ws'\nconst Asteroid = createClass()\n\n/**\n * Main interface for interacting with Rocket.Chat\n * @param asteroid  An Asteroid instance to connect to Meteor server\n */\nexport class Driver extends EventEmitter {\n  private asteroid: any /** @TODO update with Asteroid type (submit to tsd) */\n\n  /**\n   * Creates a new driver instance with given options or defaults\n   * @param host  Rocket.Chat instance Host URL:PORT (without protocol)\n   */\n  // @ts-ignore // host is unused (doesn't notice use in template literal)\n  constructor (public host = 'localhost:3000') {\n    super()\n    this.asteroid = new Asteroid({\n      endpoint: `ws://${host}/websocket`,\n      SocketConstructor: ws\n    })\n    this.asteroid.on('connected', () => this.emit('connected'))\n    this.asteroid.on('reconnected', () => this.emit('reconnected'))\n  }\n}\n"]}