{"version":3,"file":"ddp.js","sourceRoot":"","sources":["../../src/lib/ddp.ts"],"names":[],"mappings":"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","sourcesContent":["import EJSON from 'ejson'\nimport { timeout } from './settings'\nimport { logger } from './log'\nimport WebSocket from 'universal-websocket-client'\n\nexport interface Event {\n  [name: string]: any\n}\n\nexport interface Subscription {\n  id?: string,\n  name?: any,\n  unsubscribe: () => Promise<any>,\n  [key: string]: any\n}\n\nexport interface Subscriptions {\n  [key: string]: any\n}\n\nexport function debounce (func: any, wait: any, immediate = false): any {\n  let timeout: any\n  function _debounce (this: any, ...args: any[]) {\n    const context = this\n    const later = function __debounce () {\n      timeout = null\n      if (!immediate) { func.apply(context, args) }\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) { func.apply(context, args) }\n  }\n  const stop = () => clearTimeout(timeout)\n  return Object.assign(_debounce, { stop })\n}\n\nexport class EventEmitter {\n\n  events: Event\n\n  constructor () {\n    this.events = {}\n  }\n\n  /**\n   * Listen to an event and remove the listener when it occurs.\n   * @param event The event name to listen\n   * @param listener A function which will be called when the event ocurr\n   */\n  on (event: string, listener: any) {\n    if (typeof this.events[event] !== 'object') {\n      this.events[event] = []\n    }\n    this.events[event].push(listener)\n    return listener\n  }\n\n  /**\n   * Removes a event listener.\n   * @param event The name of the event that won't be listened anymore\n   * @param listener The listener to be removed\n   */\n  removeListener (event: string, listener: any): void {\n    if (typeof this.events[event] === 'object') {\n      const idx = this.events[event].indexOf(listener)\n      if (idx > -1) {\n        this.events[event].splice(idx, 1)\n      }\n      if (this.events[event].length === 0) {\n        delete this.events[event]\n      }\n    }\n  }\n\n  /**\n   * Emits an event to all subscriptions.\n   * @param event Name of the event to be emitted\n   * @param args Parameters to be passed in the event\n   */\n  emit (event: string, ...args: any[]) {\n    if (typeof this.events[event] === 'object') {\n      this.events[event].forEach((listener: any) => {\n        try {\n          listener.apply(this, args)\n        } catch (err) {\n          logger.error(`[ddp] event emit error: ${err.message}`)\n        }\n      })\n    }\n  }\n\n  /**\n   * Listen to an event and remove the listener when it occurs once.\n   * @param event The event name to listen\n   * @param listener A function which will be called when the event ocurr\n   */\n  once (event: string, listener: any) {\n    this.on(event, function g (this: any, ...args: any[]) {\n      this.removeListener(event, g)\n      listener.apply(this, args)\n    })\n    return listener\n  }\n}\n\nconst hostToUrl = (host: String, ssl = false) => `ws${ssl ? 's' : ''}://${host}`\n\nexport default class Socket extends EventEmitter {\n\n  state = 'active'\n  lastPing = new Date()\n  id = 0\n  subscriptions: Subscriptions\n  ddp = new EventEmitter()\n  url: String\n  timeout!: any\n  reconnectTimeout!: any\n  connection: any\n  private _login: any | null\n  private _timer!: any\n  private _logged = false\n\n  constructor (url: String, useSsl = false, login?: any) {\n    super()\n    this._login = login\n    this.url = hostToUrl(url, useSsl) // put wss on the beginning if useSsl is true\n    this.subscriptions = {}\n\n    const waitTimeout = () => setTimeout(async () => {\n      // this.connection.ping()\n      await this.send({ msg: 'ping' })\n      this.timeout = setTimeout(() => this.reconnect(), 1000)\n    }, timeout)\n\n    const handlePing = async () => {\n      this.lastPing = new Date()\n      await this.send({ msg: 'pong' }, true)\n      if (this.timeout) {\n        clearTimeout(this.timeout)\n      }\n      this.timeout = waitTimeout()\n    }\n\n    const handlePong = () => {\n      this.lastPing = new Date()\n      if (this.timeout) {\n        clearTimeout(this.timeout)\n      }\n      this.timeout = waitTimeout()\n    }\n\n    this.on('pong', handlePong)\n    this.on('ping', handlePing)\n\n    this.on('result', (data: any) => this.ddp.emit(data.id, { id: data.id, result: data.result, error: data.error }))\n    this.on('ready', (data: any) => this.ddp.emit(data.subs[0], data))\n    // this.on('error', () => this.reconnect())\n\n    this.on('disconnected', debounce(() => this.reconnect(), 300))\n    this.on('logged', () => this._logged = true)\n\n    this.on('logged', async () => {\n      const subscriptions = Object.keys(this.subscriptions || {}).map((key) => {\n        const { name, params } = this.subscriptions[key]\n        this.subscriptions[key].unsubscribe()\n        return this.subscribe(name, ...params)\n      })\n      await Promise.all(subscriptions)\n    })\n\n    this.on('open', async () => {\n      this._logged = false\n      await this.send({ msg: 'connect', version: '1', support: ['1', 'pre2', 'pre1'] })\n    })\n\n    this._connect().catch(e => {\n      logger.error(`[ddp] connection error: ${e.message}`)\n    })\n  }\n\n  /**\n   * Check if the ping-pong to the server is working.\n   */\n  check () {\n    if (!this.lastPing) {\n      return false\n    }\n    if ((Math.abs(this.lastPing.getTime() - new Date().getTime()) / 1000) > 50) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * Login to server via socket, returns a promise resolved with the\n   * user information and emit the event `logged` when it's successfully\n   * done or `loginError` when an error occurs.\n   * @param params User credentials which can be username/password or LDAP\n   */\n  async login (params: any) {\n    try {\n      this.emit('login', params)\n      const { result } = await this.call('login', params)\n      this._login = { resume: result.token, ...result }\n      this._logged = true\n      this.emit('logged', result)\n      return result\n    } catch (err) {\n      const error = { ...err }\n      if (/user not found/i.test(error.reason)) {\n        error.error = 1\n        error.reason = 'User or Password incorrect'\n        error.message = 'User or Password incorrect'\n      }\n      this.emit('logginError', error)\n      return Promise.reject(error)\n    }\n  }\n\n  /**\n   * Send an object to the server via Socket.\n   * @param obj the Object to be sent.\n   */\n  async send (obj: any, ignore = false) {\n    return new Promise((resolve, reject) => {\n      this.id += 1\n      const id = obj.id || `ddp-${ this.id }`\n      this.connection.send(EJSON.stringify({ ...obj, id }))\n      if (ignore) {\n        return\n      }\n      const cancel = this.ddp.once('disconnected', reject)\n      this.ddp.once(id, (data: any) => {\n        this.lastPing = new Date()\n        this.ddp.removeListener('disconnected', cancel)\n        return (data.error ? reject(data.error) : resolve({ id, ...data }))\n      })\n    })\n  }\n\n  /**\n   * Check if the DDP is connected, ready and logged.\n   */\n  get status () {\n    return this.connection && this.connection.readyState === 1 && this.check() && !!this._logged\n  }\n\n  _close () {\n    try {\n      // this.connection && this.connection.readyState > 1 && this.connection.close && this.connection.close(300, 'disconnect')\n      if (this.connection && this.connection.close) {\n        this.connection.close(300, 'disconnect')\n        delete this.connection\n      }\n    } catch (err) {\n      logger.error(`[ddp] disconnect error: ${err.message}`)\n    }\n  }\n\n  _connect () {\n    return new Promise((resolve, reject) => {\n      this.lastPing = new Date()\n      this._close()\n      clearInterval(this.reconnectTimeout)\n      this.reconnectTimeout = setInterval(() => (!this.connection || this.connection.readyState > 1 || !this.check()) && this.reconnect(), 5000)\n      try {\n        this.connection = new WebSocket(`${ this.url }/websocket`)\n        this.connection.onerror = reject\n      } catch (error) {\n        return reject(error)\n      }\n\n      this.connection.onopen = () => {\n        this.emit('open')\n        resolve()\n        this.ddp.emit('open')\n        return this._login && this.login(this._login)\n      }\n\n      this.connection.onclose = debounce((e: any) => {\n        logger.info(`[ddp] disconnected`)\n        this.emit('disconnected', e)\n      }, 300)\n\n      this.connection.onmessage = (e: any) => {\n        try {\n          const data = EJSON.parse(e.data)\n          this.emit(data.msg, data)\n          return data.collection && this.emit(data.collection, data)\n        } catch (err) {\n          logger.error(`[ddp] EJSON parse error: ${e.message}`)\n        }\n      }\n    })\n  }\n\n  /**\n   * Logs out the current User from the server via Socket.\n   */\n  logout (): Promise<any> {\n    this._login = null\n    return this.call('logout').then(() => this.subscriptions = {})\n  }\n\n  /**\n   * Disconnect the DDP from server and clear all subscriptions.\n   */\n  disconnect () {\n    this._close()\n    this._login = null\n    this.subscriptions = {}\n  }\n\n  /**\n   * Clear connection and try to connect again.\n   */\n  async reconnect () {\n    if (this._timer) {\n      return\n    }\n    delete this.connection\n    this._logged = false\n\n    this._timer = setTimeout(async () => {\n      delete this._timer\n      try {\n        await this._connect()\n      } catch (err) {\n        logger.error(`[ddp] reconnect error: ${err.message}`)\n      }\n    }, 1000)\n  }\n\n  /**\n   * Calls a method on the server and returns a promise resolved\n   * with the result of the method.\n   * @param method The name of the method to be called\n   * @param params An array with the parameters to be sent\n   */\n  call (method: string, ...params: any[]): Promise<any> {\n    return this.send({\n      msg: 'method', method, params\n    }).catch((err) => {\n      logger.error(`[ddp] call error: ${err.message}`)\n      return Promise.reject(err)\n    })\n  }\n\n  /**\n   * Unsubscribe to a stream from server and returns a promise resolved\n   * with the result of the unsubscription request.\n   * @param id Stream's id\n   */\n  unsubscribe (id: any) {\n    if (!this.subscriptions[id]) {\n      return Promise.reject(id)\n    }\n    delete this.subscriptions[id]\n    return this.send({\n      msg: 'unsub',\n      id\n    }).then((data: any) => data.result || data.subs).catch((err) => {\n      logger.error(`[ddp] unsubscribe error: ${err.message}`)\n      return Promise.reject(err)\n    })\n  }\n\n  /**\n   * Subscribe to a stream on server via socket and returns a promise resolved\n   * with the subscription object when the subscription is ready.\n   * @param name Stream's name to subscribe to\n   * @param params Params sent to the subscription request\n   */\n  subscribe (name: string, ...params: any[]): Promise<Subscription> {\n    logger.info(`[ddp] subscribe to ${name}, param: ${JSON.stringify(params)}`)\n    return this.send({\n      msg: 'sub', name, params\n    }).then(({ id }: any) => {\n      const args = {\n        id,\n        name,\n        params,\n        unsubscribe: () => this.unsubscribe(id)\n      }\n\n      this.subscriptions[id] = args\n      return args\n    }).catch((err) => {\n      logger.error(`[ddp] subscribe error: ${err.message}`)\n      return Promise.reject(err)\n    })\n  }\n}\n"]}