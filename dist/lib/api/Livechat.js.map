{"version":3,"file":"Livechat.js","sourceRoot":"","sources":["../../../src/lib/api/Livechat.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAgBH,gDAA2B;AAE3B,MAAqB,WAAY,SAAQ,aAAO;IAC9C,MAAM,CAAE,MAAyB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IACxF,IAAI,CAAE,WAAuC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,WAAW,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IACvG,SAAS,CAAE,WAAuC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IAC5J,YAAY,CAAE,WAAuC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IACtM,UAAU,CAAE,MAA8B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IAC9J,OAAO,CAAE,MAAyB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,oBAAoB,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA,CAAC,CAAC;IAC3F,YAAY,CAAE,KAA2B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IACnG,KAAK,CAAE,WAAuC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,uBAAuB,WAAW,IAAI,WAAW,CAAC,GAAG,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC,CAAA,CAAC,CAAC;IAChK,SAAS,CAAE,WAAuC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,uBAAuB,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,CAAC,UAAU,EAAE,CAAC,CAAA,CAAC,CAAC;IAC1K,WAAW,CAAE,OAA+B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IACxG,WAAW,CAAE,EAAU,EAAE,OAA+B,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IACzH,aAAa,CAAE,EAAU,EAAE,WAAuC,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IACvI,YAAY,CAAE,EAAU,EAAE,MAAgC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,6BAA6B,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IACjI,kBAAkB,CAAE,OAAsC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IAC9H,qBAAqB,CAAE,WAAuC,EAAE,IAA+B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,kBAAI,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,IAAK,IAAI,GAAI,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IACpN,iBAAiB,CAAE,KAAa,EAAE,WAAuC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC;IAC1L,SAAS,CAAE,WAAuC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,uBAAuB,WAAW,CAAC,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IACpJ,eAAe,CAAE,KAAiC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IAC/G,gBAAgB,CAAE,MAAmC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;CACrH;AApBD,8BAoBC","sourcesContent":["/**\n * @module ApiLivechat\n * Provides a client for making requests with Livechat Rocket.Chat's REST API\n */\n\nimport {\n\tILogger,\n\tILivechatTokenAPI,\n\tILivechatRoomCredentialAPI,\n\tILivechatRoomSurveyAPI,\n\tINewLivechatGuestAPI,\n\tINewLivechatMessageAPI,\n\tILivechatRoomMessagesAPI,\n\tINewLivechatNavigationAPI,\n\tINewLivechatCustomFieldAPI,\n\tINewLivechatOfflineMessageAPI,\n\tINewLivechatCustomFieldsAPI\n} from '../../interfaces'\n\nimport ApiBase from './api'\n\nexport default class ApiLivechat extends ApiBase {\n  config (params: ILivechatTokenAPI) { return this.get('livechat/config', params, false) }\n  room (credentials: ILivechatRoomCredentialAPI) { return this.get('livechat/room', credentials, false) }\n  closeChat (credentials: ILivechatRoomCredentialAPI) { return (this.post('livechat/room.close', { rid: credentials.rid, token: credentials.token }, false)) }\n  transferChat (credentials: ILivechatRoomCredentialAPI) { return (this.post('livechat/room.transfer', { rid: credentials.rid, token: credentials.token, department: credentials.department }, false)) }\n  chatSurvey (survey: ILivechatRoomSurveyAPI) { return (this.post('livechat/room.survey', { rid: survey.rid, token: survey.token, data: survey.data }, false)) }\n  visitor (params: ILivechatTokenAPI) { return this.get(`livechat/visitor/${params.token}`) }\n  grantVisitor (guest: INewLivechatGuestAPI) { return (this.post('livechat/visitor', guest, false)) }\n  agent (credentials: ILivechatRoomCredentialAPI) { return this.get(`livechat/agent.info/${credentials && credentials.rid}/${credentials && credentials.token}`) }\n  nextAgent (credentials: ILivechatRoomCredentialAPI) { return this.get(`livechat/agent.next/${credentials && credentials.token}`, { department: credentials.department }) }\n  sendMessage (message: INewLivechatMessageAPI) { return (this.post('livechat/message', message, false)) }\n  editMessage (id: string, message: INewLivechatMessageAPI) { return (this.put(`livechat/message/${id}`, message, false)) }\n  deleteMessage (id: string, credentials: ILivechatRoomCredentialAPI) { return (this.del(`livechat/message/${id}`, credentials, false)) }\n  loadMessages (id: string, params: ILivechatRoomMessagesAPI) { return this.get(`livechat/messages.history/${id}`, params, false) }\n  sendOfflineMessage (message: INewLivechatOfflineMessageAPI) { return (this.post('livechat/offline.message', message, false)) }\n  sendVisitorNavigation (credentials: ILivechatRoomCredentialAPI, page: INewLivechatNavigationAPI) { return (this.post('livechat/page.visited', { token: credentials.token, rid: credentials.rid, ...page }, false)) }\n  requestTranscript (email: string, credentials: ILivechatRoomCredentialAPI) { return (this.post('livechat/transcript', { token: credentials.token, rid: credentials.rid, email }, false)) }\n  videoCall (credentials: ILivechatRoomCredentialAPI) { return this.get(`livechat/video.call/${credentials.token}`, { rid: credentials.rid }, false) }\n  sendCustomField (field: INewLivechatCustomFieldAPI) { return this.post('livechat/custom.field', field, false) }\n  sendCustomFields (fields: INewLivechatCustomFieldsAPI) { return this.post('livechat/custom.fields', fields, false) }\n}\n"]}