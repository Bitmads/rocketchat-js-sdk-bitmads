{"version":3,"file":"Client.js","sourceRoot":"","sources":["../../../src/lib/api/Client.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {\n\tILogger,\n\tIAPIRequest,\n\tIUserAPI,\n\tICredentials,\n\tILoginResultAPI,\n\tICredentialsAPI,\n\tILivechatTokenAPI,\n\tILivechatRoomCredentialAPI,\n\tILivechatRoomResultAPI,\n\tINewLivechatGuestAPI,\n\tILivechatVisitorResultAPI,\n\tILivechatConfigResultAPI,\n\tILivechatRoomSurveyAPI,\n\tILivechatAgentResultAPI,\n\tINewLivechatMessageAPI,\n\tILivechatMessageResultAPI,\n\tILivechatRoomMessagesAPI,\n\tINewLivechatOfflineMessageAPI,\n\tILivechatOfflineMessageResultAPI,\n\tINewLivechatNavigationAPI,\n\tILivechatNavigationResultAPI,\n\tILivechatTranscriptResultAPI,\n\tILivechatVideoCallResultAPI,\n\tINewLivechatCustomFieldAPI,\n\tILivechatCustomFieldResultAPI,\n\tINewLivechatCustomFieldsAPI,\n\tILivechatCustomFieldsResultAPI,\n\tIMessage\n} from '../../interfaces'\n\nimport ApiBase from './api'\n\n/** Defaults for user queries */\nexport const userFields = { name: 1, username: 1, status: 1, type: 1 }\n\n/** Query helpers for user collection requests */\nexport default class ApiClient extends ApiBase {\n\n  get users (): any {\n    return {\n      all (fields: any = userFields) { return this.get('users.list', { fields }).then((r: any) => r.users) },\n      allNames () { return this.get('users.list', { fields: { 'username': 1 } }).then((r: any) => r.users.map((u: IUserAPI) => u.username)) },\n      allIDs () { return this.get('users.list', { fields: { '_id': 1 } }).then((r: any) => r.users.map((u: IUserAPI) => u._id)) },\n      online (fields: any = userFields) { return this.get('users.list', { fields, query: { 'status': { $ne: 'offline' } } }).then((r: any) => r.users) },\n      onlineNames () { return this.get('users.list', { fields: { 'username': 1 }, query: { 'status': { $ne: 'offline' } } }).then((r: any) => r.users.map((u: IUserAPI) => u.username)) },\n      onlineIds () { return this.get('users.list', { fields: { '_id': 1 }, query: { 'status': { $ne: 'offline' } } }).then((r: any) => r.users.map((u: IUserAPI) => u._id)) }\n    }\n\n  }\n\t// editMessage(message: IMessage) chat.update\n  joinRoom (rid: string) { return this.get('channel.join', { rid }, true) }\n  setReaction (emoji: string, messageId: string) { return this.get('\u001cchat.react', { emoji, messageId }, true) }\n\n  info () { return this.get('info', {}, true) }\n  sendMessage (message: IMessage) { return {} }\n\n  getRoomId (name: string) { return this.get('chat.find', { name }, true) }\n  getRoomName (rid: string) { return this.get('chat.find', { rid }, true) }\n  createDirectMessage (username: string) { return this.get('im.create', { username }, true) }\n\n/**\n * Edit an existing message, replacing any attributes with those provided.\n * The given message object should have the ID of an existing message.\n */\n  editMessage (message: IMessage): Promise<IMessage> {\n    return this.post('chat.update', message)\n  }\n\n}\n"]}