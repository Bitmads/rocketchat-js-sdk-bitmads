{"version":3,"file":"api.js","sourceRoot":"","sources":["../../../src/livechat/lib/api.ts"],"names":[],"mappings":"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","sourcesContent":["import * as api from '../../lib/api'\nimport {\n  ILivechatTokenAPI,\n  ILivechatRoomCredencialAPI,\n  ILivechatRoomResultAPI,\n  INewLivechatGuestAPI,\n  ILivechatVisitorResultAPI,\n  ILivechatConfigResultAPI,\n  ILivechatRoomSurveyAPI,\n  ILivechatAgentResultAPI,\n  INewLivechatMessageAPI,\n  ILivechatMessageResultAPI,\n  ILivechatRoomMessagesAPI,\n  INewLivechatOfflineMessageAPI,\n  ILivechatOfflineMessageResultAPI\n} from './Interfaces'\n\n/** Query helpers for livechat REST requests */\nexport const livechat: any = {\n  config: (params: ILivechatTokenAPI) => api.get(`livechat/config/${ params && params.token }`).then((r: ILivechatConfigResultAPI) => r),\n  room: (params: ILivechatRoomCredencialAPI) => api.get('livechat/room', params).then((r: ILivechatRoomResultAPI) => r),\n  closeChat: (params: ILivechatRoomCredencialAPI) => (api.post(`livechat/room.close/${ params.rid }`, { token: params.token }, false)).then((r) => r),\n  transferChat: (params: ILivechatRoomCredencialAPI) => (api.post(`livechat/room.transfer/${ params.rid }`, { token: params.token, department: params.department }, false)).then((r) => r),\n  chatSurvey: (params: ILivechatRoomSurveyAPI) => (api.post(`livechat/room.survey/${ params.rid }`, { token: params.token, data: params.data }, false)).then((r) => r),\n  visitor: (params: ILivechatTokenAPI) => api.get(`livechat/visitor/${ params.token }`).then((r: ILivechatVisitorResultAPI) => r),\n  grantVisitor: (visitor: INewLivechatGuestAPI) => (api.post('livechat/visitor', visitor, false)).then((r: ILivechatVisitorResultAPI) => r),\n  agent: (params: ILivechatRoomCredencialAPI) => api.get(`livechat/agent.info/${ params && params.rid }/${ params && params.token }`).then((r: ILivechatAgentResultAPI) => r),\n  nextAgent: (params: ILivechatRoomCredencialAPI) => api.get(`livechat/agent.next/${ params && params.token }`, { department: params.department}).then((r: ILivechatAgentResultAPI) => r),\n  sendMessage: (message: INewLivechatMessageAPI) => (api.post('livechat/message', message, false)).then((r: ILivechatMessageResultAPI) => r),\n  editMessage: (id: string, message: INewLivechatMessageAPI) => (api.put(`livechat/message/${ id }`, message, false)).then((r: ILivechatMessageResultAPI) => r),\n  deleteMessage: (id: string, params: ILivechatRoomCredencialAPI) => (api.del(`livechat/message/${ id }`, params, false)).then((r) => r),\n  loadMessages: (id: string, params: ILivechatRoomMessagesAPI) => api.get(`livechat/messages.history/${ id }`, params).then((r) => r),\n  sendOfflineMessage: (message: INewLivechatOfflineMessageAPI) => (api.post('livechat/offline.message', message, false)).then((r: ILivechatOfflineMessageResultAPI) => r),\n}\n"]}