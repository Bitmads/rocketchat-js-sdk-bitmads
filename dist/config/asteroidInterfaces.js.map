{"version":3,"file":"asteroidInterfaces.js","sourceRoot":"","sources":["../../src/config/asteroidInterfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { EventEmitter } from 'events'\n\n/**\n * Patch in mock Asteroid type\n * @todo Update with typing from definately typed (when available)\n */\nexport interface IAsteroid extends EventEmitter {\n  ddp: { on: (event: string, func: (doc: any) => void) => void }\n  connect: () => void,\n  disconnect: () => void,\n  call: (method: string, params: any) => any\n  apply: (method: string, params: any[]) => any\n  subscribe: (name: string, params: any) => any\n  subscriptions: ISubscription[],\n  unsubscribe: (id: string) => void,\n  createUser: (options: IUserOptions) => Promise<string>,\n  loginWithPassword: (options: IUserOptions) => Promise<string>,\n  login: (params: any) => Promise<string>,\n  logout: () => void\n}\n\n/**\n * Patch in Asteroid subscription type\n * @todo Update with typing from definately typed (when available)\n */\nexport interface ISubscription extends EventEmitter {\n  id: string\n}\n\n/**\n * Patch in Asteroid user options type\n * @todo Update with typing from definately typed (when available)\n */\nexport interface IUserOptions {\n  username?: string,\n  email?: string,\n  password: string\n}\n"]}